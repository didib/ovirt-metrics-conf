# In v1 configuration, type and id are @ prefix parameters.
# @type and @id are recommended. type and id are still available for backward compatibility


# HTTP input
# http://localhost:8888/<tag>?json=<json>
<source>
  @type http
  @id http_input
  @log_level debug

  port 8888
</source>

## match fluent's internal events
#<match fluent.**>
#  @type null
#</match>


#Add to all tag metrics the collectd plugin name

<match ovirt_collectd>
  @type rewrite_tag_filter
  rewriterule1 plugin ^(\w+\S+) ${tag}.$1
</match>

#Statsd Plugin
 
<match ovirt_collectd.statsd>
  @type rewrite_tag_filter
  rewriterule1 type_instance ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.statsd.vms.*.{nic,disk}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type ${type_instance.split(".")[2]}_${type_instance.split(".")[3]}
    type_instance ${type_instance.split(".")[3]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.vms.*.{balloon,cpu}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type ${type_instance.split(".")[2]}_${type_instance.split(".")[3]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
    remove_keys type_instance
</filter>

<filter ovirt_collectd.statsd.hosts.{cpu,memory,swap,vms,storage}.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}
    type_instance ${type_instance.split(".")[2]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.hosts.elapsed_time>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.hosts.{nic,disk}.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}_${type_instance.split(".")[3]}
    type_instance ${type_instance.split(".")[2]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

#Process Plugin

<match ovirt_collectd.processes>
  @type rewrite_tag_filter
  rewriterule1 type ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.processes.ps_disk_**>
  @type record_transformer
  enable_ruby
  <record>
    read_values ${values[0]}
    write_values ${values[1]}
    read_dstypes ${dstypes[0]}
    write_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter>

<filter ovirt_collectd.processes.ps_cputime>
  @type record_transformer
  enable_ruby
  <record>
    user_values ${values[0]}
    syst_values ${values[1]}
    user_dstypes ${dstypes[0]}
    syst_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter>

<filter ovirt_collectd.processes.ps_count>
  @type record_transformer
  enable_ruby
  <record>
    processes_values ${values[0]}
    threads_values ${values[1]}
    processes_dstypes ${dstypes[0]}
    threads_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter>

<filter ovirt_collectd.processes.ps_pagefaults>
  @type record_transformer
  enable_ruby
  <record>
    minflt_values ${values[0]}
    majflt_values ${values[1]}
    minflt_dstypes ${dstypes[0]}
    majflt_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter>

#Disk Plugin

<match ovirt_collectd.disk>
  @type rewrite_tag_filter
  rewriterule1 type ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.disk.disk_**>
  @type record_transformer
  enable_ruby
  <record>
    read_values ${values[0]}
    write_values ${values[1]}
    read_dstypes ${dstypes[0]} 
    write_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter> 

#Memory Pluging

<filter ovirt_collectd.memory>
  @type record_transformer
  <record>
    unit MB
  </record>
</filter>

#Netlink Plugin

<filter ovirt_collectd.netlink>
  @type record_transformer
  enable_ruby
  <record>
    rx_values ${values[0]}
    tx_values ${values[1]}
    rx_dstypes ${dstypes[0]}
    tx_dstypes ${dstypes[1]}
  </record>
  remove_keys values,dstypes
</filter>

#Load Plugin

<filter ovirt_collectd.load>
  @type record_transformer
  enable_ruby
  <record>
    shortterm_values ${values[0]}
    midterm_values ${values[1]}
    longterm_values ${values[2]}
    shortterm_dstypes ${dstypes[0]}
    midterm_dstypes ${dstypes[1]}
    longterm_dstypes ${dstypes[2]}
  </record>
  remove_keys values,dstypes
</filter>

#CPU Plugin

<filter ovirt_collectd.cpu>
  @type record_transformer
  <record>
    unit percent
  </record>
</filter>

#All records

<filter ovirt_collectd.virt>
  @type record_transformer
  <record>
      source ovirt_collectd
      tag ${tag_parts[0]}.${tag_parts[1]}
      host_id 44454C4C-3200-104E-804A-CAC04F58344A
      hostname "#{Socket.gethostname}"
      entity vms
  </record>
  remove_keys host
</filter>

<filter ovirt_collectd.{cpu,load,netlink,aggregation,swap,memory,nfs,df,entropy,disk.**,processes.**}>
  @type record_transformer
  <record>
      source ovirt_collectd
      tag ${tag_parts[0]}.${tag_parts[1]}
      host_id 44454C4C-3200-104E-804A-CAC04F58344A
      hostname "#{Socket.gethostname}"
      entity hosts
  </record>
  remove_keys host
</filter>

#match fluent's internal events
#<match fluent.**>
#  @type stdout
#</match>

#Forward Plugin
<match **>
  @type forward
  heartbeat_type tcp
  flush_interval 1s
  <server>
    name 10.35.17.34
    host 10.35.17.34
    port 4000
  </server>
</match>
